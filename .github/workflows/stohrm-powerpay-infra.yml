name: Terraform Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - qa
          - stage
          - prod
      application:
        description: 'Application'
        required: true
        default: ''
        type: choice
        options:
          - powerpay2-1
          - stohrm
      terraformApply:
        description: 'Apply Terraform changes after Plan'
        required: true
        default: 'false'
        type: boolean           
env:
  ENVIRONMENT: ${{ github.event.inputs.environment }}
  APPLICATION: ${{ github.event.inputs.application }} 
  TERRAFORM_APPLY: ${{ github.event.inputs.terraformApply }} 
jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.7.2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1  # Adjust as necessary for your region

    - name: Set environment variables
      run: |
        echo "ENVIRONMENT=${{ env.ENVIRONMENT }}" >> $GITHUB_ENV
        echo "APPLICATION=${{ env.APPLICATION }}" >> $GITHUB_ENV

    - name: Initialize Terraform
      working-directory: ./terraform_aws/applications/${{ env.APPLICATION }}/environments/${{ env.ENVIRONMENT }}
      run: terraform init
      
    - name: Create .tfvars file powerpay
      if: ${{ github.event.inputs.application == 'powerpay2-1' }}
      working-directory: ./terraform_aws/applications/${{ env.APPLICATION }}/environments/${{ env.ENVIRONMENT }}
      run: |
        cat <<EOF > runtime-variables.tfvars
        rds_db_username = ["${{ secrets.RDSDEV_GE_USERNAME }}","${{ secrets.RDSDEV_REPORTS_USERNAME }}","${{ secrets.RDSDEV_PE_USERNAME }}"]
        rds_db_password = ["${{ secrets.RDSDEV_GE_PASSWORD }}","${{ secrets.RDSDEV_REPORTS_PASSWORD }}","${{ secrets.RDSDEV_PE_PASSWORD }}"]
        aws_access_key_id = "${{ secrets.AWS_ACCESS_KEY_ID }}"
        aws_secret_access_key = "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        github_username = "${{ secrets.GITHB_USERNAME }}"
        github_password = "${{ secrets.GITHB_TOKEN }}"
        EOF
    - name: Create .tfvars file stohrm
      if: ${{ github.event.inputs.application == 'stohrm' }}
      working-directory: ./terraform_aws/applications/${{ env.APPLICATION }}/environments/${{ env.ENVIRONMENT }}
      run: |
        cat <<EOF > runtime-variables.tfvars
        rds_db_username = ["${{ secrets.RDSDEV_STOHRM_USERNAME }}"]
        rds_db_password = ["${{ secrets.RDSDEV_STOHRM_PASSWORD }}"]
        aws_access_key_id = "${{ secrets.AWS_ACCESS_KEY_ID }}"
        aws_secret_access_key = "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        github_username = "${{ secrets.GITHB_USERNAME }}"
        github_password = "${{ secrets.GITHB_TOKEN }}"
        EOF
        
    - name: Plan Terraform
      working-directory: ./terraform_aws/applications/${{ env.APPLICATION }}/environments/${{ env.ENVIRONMENT }}
      run: |
        terraform plan -var-file="runtime-variables.tfvars" -var-file="${{ env.ENVIRONMENT }}-terraform.tfvars"

    - name: Apply Terraform
      if: ${{ github.event.inputs.terraformApply == 'true' }}
      working-directory: ./terraform_aws/applications/${{ env.APPLICATION }}/environments/${{ env.ENVIRONMENT }}
      run: |
        terraform apply -var-file="runtime-variables.tfvars" -var-file="${{ env.ENVIRONMENT }}-terraform.tfvars" -auto-approve
     
        
